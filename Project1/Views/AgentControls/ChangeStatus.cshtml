@model Project1.Models.ChangeStatus

@{
    ViewBag.Title = "Edit";
}

<h2>Status of this ticket</h2>

<div class="fontnav">
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <img class="logo" src="~/images/Zoho.png" />
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse" title="more options">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Zoho Agent Portal", "AgentPage", "AgentControls", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Add New Ticket", "AddTicket", "AgentControls")</li>
                    <li>@Html.ActionLink("Add New Customer", "AddCustByAgent", "AgentControls")</li>
                    <li>@Html.ActionLink("Customer List", "GetAllCustByAgent", "AgentControls")</li>
                    <li>@Html.ActionLink("All Posted Tickets", "GetAllTickets", "AgentControls")</li>
                    <li>@Html.ActionLink("Logout", "Index", "Home")</li>
                </ul>
            </div>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TicketId)

    <div class="form-group">
        @Html.LabelFor(model => model.TicketId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TicketId, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @id = "Description", @onfocusout = "checknum()" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustomerId, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @id = "Description", @onfocusout = "checknum()" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StDescr, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StDescr, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @id = "STDescription", @onfocusout = "checknum()" } })
            <small> </small>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @id = "Description", @onfocusout = "checknum()" } })
            <small> </small>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AssignedTo, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", placeholder = "Assign to a Agent", @id = "Description", @onfocusout = "checknum()" } })
            <small> </small>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <small></small>
                @Html.DropDownList("Status", new List<SelectListItem>
                {
                      new SelectListItem { Text = "Open", Value = "Open"},
                      new SelectListItem { Text = "In progress", Value = "In progress"},
                      new SelectListItem { Text = "Resolved", Value = "Resolved"},
                      new SelectListItem { Text = "Closed", Value = "Closed"}
                }, "[Select]")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "GetAllTickets")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
