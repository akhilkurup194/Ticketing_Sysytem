@model Project1.Models.CustAgentModel

@{
    ViewBag.Title = "Register Here";
}

<h1 class="signhd">Create new Agent</h1>
<script src="~/Scripts/Validation.js"></script>
<link href="~/Content/StyleSheet1.css" rel="stylesheet" />
<body class="Addjobbody">
    <div class="fontnav">
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <img class="logo" src="~/images/Zoho.png" />
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse" title="more options">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @Html.ActionLink("Zoho Admin Portal", "AgentDetails", "AdminControls", new { area = "" }, new { @class = "navbar-brand" })
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Add New Agent", "AddAgent", "AdminControls")</li>
                        <li>@Html.ActionLink("Agent List", "AgentDetails", "AdminControls")</li>
                        <li>@Html.ActionLink("Logout", "Index", "Home")</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="jobhed">Agent Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name", @id = "fname", @onfocusout = "checkfname()" } })
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name", @id = "lname", @onfocusout = "checklname()" } })
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @id = "date", @onfocusout = "checkdate()" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButton("Gender", "Male") Male
                    @Html.RadioButton("Gender", "Female") Female
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phonenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phonenumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Mobile Number", @id = "num", @onfocusout = "checknum()" } })
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", placeholder = "Email ID", @id = "mail", @onfocusout = "checkmail()" } })
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address", @id = "address", @onfocusout = "checkaddress()" } })
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username", @id = "name", @onfocusout = "checkname()" } })
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="password" @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", @id = "pwd", @onfocusout = "checkpwd()" } })
                    <input type="checkbox" onclick="myFunction()">Show Password
                    <small> </small>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input class="btnlogin" type="submit" value="Register" />

                </div>
            </div>
        </div>
    }
</body>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

